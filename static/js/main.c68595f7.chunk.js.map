{"version":3,"sources":["context/ModalContext.js","component/Header.js","component/About.js","data/resumeData.js","component/Resume.js","component/OverlayGrid.js","component/FlexRow.js","component/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["React","createContext","setModalProperties","modalProperties","hideModal","Link","Header","react_default","a","createElement","className","id","affix","es_anchor","menu","mode","Item","key","href","title","dist_default","speed","socialMediaInfo","icon","url","About","row","justify","col","xs","sm","src","alt","map","_ref","i","target","rel","es_icon","type","workExperience","time","position","company","location","companyUrl","details","additionalExperience","TabPane","mapExperienceToTimelineItem","experience","x","xi","timeline","d","Resume","tabs","defaultActiveKey","tabPosition","tab","OverlayGrid","imageUrl","link","description","FlexRow","children","rest","Object","objectWithoutProperties","assign","gutter","md","lg","Portfolio","align","src_component_OverlayGrid","App","state","loading","content","visible","properties","_this","setState","prevState","objectSpread","_this$state","this","_modalProperties$cont","_modalProperties$titl","_modalProperties$foot","footer","_modalProperties$widt","width","ModalContext","Provider","value","src_component_Header","src_component_About","src_component_Resume","src_component_Portfolio","modal","onCancel","PureComponent","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c68595f7.chunk.js","sourcesContent":["import React from 'react';\n\nexport default React.createContext({\n  setModalProperties: () => {},\n  modalProperties: {},\n  hideModal: () => {},\n});\n","import React from 'react';\nimport { Affix, Menu, Anchor } from 'antd';\nimport Typing from 'react-typing-animation';\n\n// const { Link } = Anchor;\n// const SubMenu = Menu.SubMenu;\n// const MenuItemGroup = Menu.ItemGroup;\nimport './Header.less';\n\nconst { Link } = Anchor;\nconst Header = () => (\n  <div className=\"Header\" id=\"home\">\n    <Affix>\n      <Anchor>\n        <Menu mode=\"horizontal\">\n          <Menu.Item key=\"home\">\n            <Link href=\"#home\" title=\"Home\" />\n          </Menu.Item>\n          <Menu.Item key=\"about\">\n            <Link href=\"#about\" title=\"About\" />\n          </Menu.Item>\n          <Menu.Item key=\"resume\">\n            <Link href=\"#resume\" title=\"Resume\" />\n          </Menu.Item>\n          <Menu.Item key=\"portfolio\">\n            <Link href=\"#portfolio\" title=\"Portfolio\" />\n          </Menu.Item>\n          <Menu.Item key=\"contact\">\n            <Link href=\"#contact\" title=\"Contact\" />\n          </Menu.Item>\n        </Menu>\n      </Anchor>\n    </Affix>\n    <div className=\"vertical-align-middle\">\n      <Typing speed={100}>\n        <h1 className=\"white-text header-text\">Hi, My name is Hanming Zeng</h1>\n        <p className=\"white-text description\">This site is under construction.</p>\n      </Typing>\n    </div>\n\n  </div>\n);\n\nexport default Header;\n","/* eslint-disable react/no-array-index-key */\n\nimport React from 'react';\nimport { Row, Col, Icon } from 'antd';\n\nimport './About.less';\n\nconst socialMediaInfo = [\n  {\n    icon: 'github',\n    url: 'https://github.com/zhm12359'\n  },\n  {\n    icon: 'facebook',\n    url: 'https://www.facebook.com/zenghanming'\n  },\n  {\n    icon: 'linkedin',\n    url: 'https://www.linkedin.com/in/hanming-zeng-75480a9b/'\n  }\n];\n\nconst About = () => (\n  <div id=\"about\" className=\"About\">\n    <Row justify=\"center\" className=\"vertical-align-middle\">\n      <Col xs={24} sm={12} className=\"text-center\">\n        <img src=\"/images/profile-pic.jpg\" className=\"profile-pic\" alt=\"Profile Pic\" />\n      </Col>\n\n      <Col xs={24} sm={12} className=\"text-center\">\n        <h2>About me</h2>\n        <p>\n          My name is Hanming Zeng. I am currently a Software Engineer at&nbsp;\n          <a href=\"https://equityzen.com\">Equityzen</a>. I graduated from\n          New York University in December 2017 with a B.A. in Computer Science.\n          I love coding and exploring newest technologies. This site is built with\n          ReactJs and ant.design framework.\n        </p>\n        <div className=\"social-media\">\n          {\n            socialMediaInfo.map(({ icon, url }, i) => (\n              <a href={url}\n                 key={i}\n                 target=\"_blank\"\n                 rel=\"noopener noreferrer\"><Icon type={icon} />\n              </a>\n            ))\n          }\n        </div>\n\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default About;\n","/* eslint-disable import/prefer-default-export */\n\nexport const workExperience = [\n  {\n    time: 'January 2018 - Present',\n    position: 'Software Engineer',\n    company: 'Equityzen',\n    location: 'New York, NY',\n    companyUrl: 'https://equityzen.com',\n    details: [\n      'Full stack development for internal and external Django web application that manages private stock market deals',\n      'Lead frontend engineering, integrate ReactJs and Redux into existing project and write guiding documentations ',\n      'Code review and offer constructive suggestions to teammates to boost up program performance, test coverage and SEO',\n      'Manage product deploy via AWS and ensure the workflow adheres to Agile methodology across the entire team'\n    ]\n  },\n  {\n    time: 'May 2016 - January 2018',\n    position: 'Software Engineer',\n    location: 'New York, NY',\n    company: 'New York University, Operations Technology Support and Services',\n    companyUrl: 'https://www.nyu.edu/life/campus-resources/facilities-operations-maintenance.html',\n    details: [\n      'Program and maintain web applications in ASP.NET (C#) MVC framework for NYU Treasury Department ',\n      'Set up Front End page using React-Redux and document the use patterns for React Components on Confluence',\n      'Design data models in C# Entity Framework, establish database in MSSQL server and create Api Endpoints',\n      'Review pull request from coworkers, comment on potential logic error and help reduce time and space complexity'\n    ]\n  },\n  {\n    time: 'May 2017 - August 2017',\n    position: 'Full Stack Developer',\n    company: 'Credit Suisse',\n    location: 'New York, NY',\n    companyUrl: 'https://www.credit-suisse.com/us/en.html',\n    details: [\n      'Investigated code efficiency and boosted productivity by getting rid of redundant database calls in legacy projects',\n      'Calculated latency and throughput of a pricer application in Java Spring framework and logged unusual behaviors',\n      'Developed a web application for fine art backed loan transaction using Blockchain (Distributed Ledger) Technology',\n    ]\n  }\n];\n\nexport const additionalExperience = [\n  {\n    time: 'January 2016 - May 2016',\n    position: 'Data Analyst Intern',\n    company: 'Amass Insights, Inc.',\n    location: 'New York, NY',\n    companyUrl: 'https://amassinsights.com/',\n    details: [\n      'Collected, analyzed, and delivered unique data to investors working with 1600 investment and technology companies',\n      'Researched on potential data partners and recorded information of hundred of companies in 12 different industries',\n    ]\n  },\n  {\n    time: ' September 2015 - December 2018',\n    position: 'Teaching Assistant',\n    company: 'New York University',\n    location: 'New York, NY',\n    companyUrl: 'http://nyu.edu',\n    details: [\n      'Facilitate 10 in-class coding workshops with professors to deepen students’ understanding in Python programming',\n      'Grade 300+ algorithm homework, aid 100+ students with programming exercises and prepare them for examinations',\n    ]\n  },\n  {\n    time: ' September 2015 - December 2018',\n    position: 'Mentor',\n    company: 'Phi Chi Theta Beta National Business Fraternity, New York Beta Chapter ',\n    location: 'New York, NY',\n    companyUrl: 'http://nyu.edu',\n    details: [\n      'Coach members python programming, hold workshops in web design and mentor pledges in business etiquette',\n    ]\n  },\n  {\n    time: ' March 2013 - June 2013',\n    position: 'Beta Tester and Teaching Assistant',\n    company: 'Enactus Computer Training Program for the Blind',\n    location: 'Hangzhou, China',\n    companyUrl: 'http://nyu.edu',\n    details: [\n      'Reported the deficiency of Braille Screen Reader during instruction, customized the need for blind participants',\n    ]\n  },\n];\n","/* eslint-disable react/no-array-index-key */\n\nimport React from 'react';\nimport { Timeline, Row, Col, Tabs } from 'antd';\nimport './Resume.less';\n\nimport { workExperience, additionalExperience } from '../data/resumeData';\n\nconst { TabPane } = Tabs;\n\nconst mapExperienceToTimelineItem = experience => (\n  experience.map((x, xi) => (\n    <Timeline.Item key={xi}>\n      <h3>{x.time}</h3>\n      <h3>{x.position}, {x.location}</h3>\n      <h4>\n        <a href={x.companyUrl}>{x.company}</a>\n      </h4>\n      <ul>\n        {x.details.map((d, i) => (\n          <li key={i}>{d}</li>\n        ))}\n      </ul>\n    </Timeline.Item>\n  ))\n);\n\nconst Resume = () => (\n  <div className=\"Resume\" id=\"resume\">\n    <Row className=\"padding-top-4\">\n      <Col xs={24}>\n        <Tabs\n          defaultActiveKey=\"1\"\n          tabPosition=\"left\">\n          <TabPane tab=\"Work Experience\" key=\"1\" className=\"auto-overflow\">\n            <Timeline>\n              {mapExperienceToTimelineItem(workExperience)}\n            </Timeline>\n          </TabPane>\n          <TabPane tab=\"Additional Experience\" key=\"2\" className=\"auto-overflow\">\n            <Timeline>\n              {mapExperienceToTimelineItem(additionalExperience)}\n            </Timeline>\n          </TabPane>\n          <TabPane tab=\"Technical Skils\" key=\"3\" className=\"auto-overflow\">\n            <Timeline>\n              <Timeline.Item>\n                <h4>GPA 3.86/4.00</h4>\n                <div>\n                  <h4>Languages</h4>\n                  <ul>\n                    <li>Javascript</li>\n                    <li>Python</li>\n                    <li>Java</li>\n                    <li>C#</li>\n                    <li>Scala</li>\n                    <li>Kotlin</li>\n                    <li>HTML and CSS</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4>Web Frameworks</h4>\n                  <ul>\n                    <li>Django</li>\n                    <li>Flask</li>\n                    <li>Java Spring</li>\n                    <li>.NET</li>\n                    <li>Express</li>\n                    <li>ReactJs</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4>Database</h4>\n                  <ul>\n                    <li>SQL Server</li>\n                    <li>Postgres SQL</li>\n                    <li>MongoDB</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4>Infrastructure</h4>\n                  <ul>\n                    <li>Git</li>\n                    <li>Subversion</li>\n                    <li>Amazon Web Services</li>\n                  </ul>\n                </div>\n              </Timeline.Item>\n            </Timeline>\n          </TabPane>\n          <TabPane tab=\"Education\" key=\"4\" className=\"auto-overflow\">\n            <Timeline>\n              <Timeline.Item>\n                <h3>September 2014 - December 2017</h3>\n                <h3>New York University, Bachelor of Arts in Computer Science </h3>\n                <h4>GPA 3.86/4.00</h4>\n                <div>\n                  <h4>Relevant Coursework</h4>\n                  <ul>\n                    <li>Full Stack Web Development</li>\n                    <li>Data Structures</li>\n                    <li>Algorithms</li>\n                    <li>Statistics</li>\n                    <li>Operating System</li>\n                    <li>Object Oriented Programming</li>\n                  </ul>\n                </div>\n              </Timeline.Item>\n            </Timeline>\n          </TabPane>\n        </Tabs>\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default Resume;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './OverlayGrid.less';\n\nconst OverlayGrid = ({ imageUrl, title, link, description }) => (\n  <div className=\"text-center\">\n    <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n      <div className=\"OverlayGrid\">\n        <img src={imageUrl}\n             alt=\"Failed to load\"\n             className=\"image\" />\n        <div className=\"overlay\">\n          <div className=\"vertical-align-middle\">\n            <h2 className=\"white-text\">{title}</h2>\n            <p>{description}</p>\n          </div>\n        </div>\n      </div>\n    </a>\n    <h3>{title}</h3>\n  </div>\n);\n\nOverlayGrid.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired,\n};\n\nexport default OverlayGrid;\n","import React from 'react';\nimport { Row } from 'antd';\n\nexport default ({ children, ...rest }) => (\n  <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }} type=\"flex\" {...rest}>\n    {children}\n  </Row>\n);\n","import React from 'react';\nimport { Col } from 'antd';\n\nimport OverlayGrid from './OverlayGrid';\n\nimport FlexRow from './FlexRow';\nimport './Portfolio.less';\n\nconst Portfolio = () => {\n  return (\n    <div id=\"portfolio\" className=\"Portfolio\">\n      <h2 className=\"text-center subtitle\">~&#9733;Portfolio&#9733;~</h2>\n      <FlexRow align=\"center\" justify=\"middle\" className=\"padding-2\">\n        <Col xs={24} sm={12} md={8}>\n          <OverlayGrid imageUrl=\"images/portfolio/crossy-road.png\"\n                       title=\"Game: VR Crossy Road\"\n                       description=\"A VR crossy road game.\"\n                       link=\"games/crossy-road/index.html\" />\n        </Col>\n        <Col xs={24} sm={12} md={8}>\n          <OverlayGrid imageUrl=\"images/portfolio/comics-screenshot.jpg\"\n                       title=\"Comic: What if I am a twin\"\n                       description=\"A self made comic with Bitmoji.\"\n                       link=\"images/portfolio/comics.pdf\" />\n        </Col>\n        <Col xs={24} sm={12} md={8}>\n          <OverlayGrid imageUrl=\"images/portfolio/kirby.png\"\n                       title=\"Game: Kirby vs. Missile\"\n                       description=\"A mini kirby game. Try to reach as many stars as your can while dodging the middles.\"\n                       link=\"games/kirby/index.html\" />\n        </Col>\n      </FlexRow>\n    </div>\n  );\n};\n\nexport default Portfolio;\n","import React, { PureComponent } from 'react';\nimport './App.less';\nimport { Modal } from 'antd';\nimport ModalContext from './context/ModalContext';\n\nimport Header from './component/Header';\nimport About from './component/About';\nimport Resume from './component/Resume';\nimport Portfolio from './component/Portfolio';\n\nclass App extends PureComponent {\n  state = {\n    loading: false,\n    modalProperties: {\n      content: <div />,\n      visible: false\n    }\n  };\n\n  setModalProperties = (properties) => {\n    this.setState(prevState => (\n      {\n        modalProperties: {\n          visible: prevState.visible,\n          ...properties\n        }\n      }\n    ));\n  };\n\n  hideModal = () => {\n    this.setState(prevState => (\n      {\n        modalProperties: {\n          visible: false,\n          ...prevState.modalProperties\n        }\n      }\n    ));\n  };\n\n  render() {\n    const {\n      state: { modalProperties, loading }, setModalProperties, hideModal\n    } = this;\n    const { content = <div />, title = null, footer = null, width = 1000 } = modalProperties;\n    if (loading) {\n      return (\n        <div>\n          loading\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <ModalContext.Provider value={{ setModalProperties, modalProperties, hideModal }}>\n          <Header />\n          <About />\n          <Resume />\n          <Portfolio />\n          <Modal visible={modalProperties.visible}\n                 onCancel={hideModal}\n                 width={width}\n                 title={title}\n                 footer={footer}\n                 className=\"Modal\">\n            {content}\n          </Modal>\n        </ModalContext.Provider>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}